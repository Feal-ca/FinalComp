EXERCISE 3:

How To Modify The Permissions Of The Test File To Have Only Write Permission For The Owner, Its Group And The Rest Of Users:
	- Use the command #chmod to modify the permissions of the file
	- Using "#chmod ugo-rx file", you will remove reading(r) and execution(x) permission for the owner(o), group(g) and rest of users(u) of the file named file.
	- Use "#chmod ugo+w file" to activate the writing(w) permission for the owner, group and rest of user for the file named file.
	You could also check first which permissions are already active using the command "#ls -l" and then only activating/removing the necessary permissions.

What Happens When You Try To Do A Cat?
	Since reading permission has been removed for user, when using the command cat, the following text will pop up:
		cat: file: Permission denied
	where "file" is the name of the file.
	

EXERCISE 4:

How To Filter The List Of The Folder Contents To Show Only The Directories:
	- Use the command "#ls -l | grep ^d" in order to do so.
	The command "#ls -l" shows the files and directories inside of the curent directory. The pipe (|) redirects the output to the following command, in this case, "#grep". This last command searches for a text in one or more files. In this case, it searches for the lines starting with "d" in the "#ls -l" output since we used "^d"". The '^' used is the one that specifies the search so it looks for the lines starting with d.
	
	
EXERCISE 5:
 These are the directories found:
 
drwxr-xr-x   3 root root     4096 Feb 20 10:09 assig
drwxr-xr-x   2 root root     4096 Jan 17 08:58 bin
drwxr-xr-x   6 root root     4096 Jan 22 12:39 boot
drwxr-xr-x   3 root root     4096 Feb 20 10:09 dades
drwxr-xr-x  20 root root     4400 Feb 20 10:08 dev
drwxr-xr-x 209 root root    20480 Feb 20 10:08 etc
drwxr-xr-x  12 root root     4096 Jun 28  2023 home
drwxr-xr-x   3 root alumnes  4096 Sep 22  2015 home2
drwxr-xr-x  10 root root     4096 Jan 22 12:35 lib
drwxr-xr-x   5 root root    12288 Jan 22 12:35 lib64
drwx------   2 root root    16384 May 20  2015 lost+found
drwxr-xr-x   2 root root     4096 Mar 15  2022 mnt
drwxr-xr-x  97 root root     4096 Feb 20 10:08 opt
dr-xr-xr-x 391 root root        0 Feb 20 10:08 proc
drwx------  73 root root     4096 Jan 17 14:42 root
drwxr-xr-x  52 root root     1460 Feb 20 11:08 run
drwxr-xr-x   2 root root    12288 Jan 22 12:35 sbin
drwxr-xr-x   2 root root     4096 Mar 15  2022 selinux
drwxr-xr-x   7 root root     4096 Jun  9  2022 srv
dr-xr-xr-x  13 root root        0 Feb 20 10:08 sys
drwxrwxrwt  15 root root      620 Feb 20 11:40 tmp
drwxr-xr-x  16 root root     4096 May 30  2023 usr
drwxr-xr-x  14 root root     4096 Jan  5 12:14 var


- "bin" contains some essential executable  binaries.
- "home" is where you can find your documents and personal folders.
- "tmp" contains temporal archives.
- "lib" contains the standard libraries.
- "etc" contains configuration files.
- "boot" contains the static boot files, needed to start up the system.
- "dev" contains special files that represent devices.
- "root" contains the root home directory.
- "usr" contains users binaries and read-only data.
- "proc" contains special process files and kernel information files


EXERCISE 6:
What Do You Think The Meaning Of The Variable Pwd Is?
	"#pwd" is the print working directory command, so it shows the current directory using the "PWD" environment variable, which stores this path.
	
Explain The Purpose Of The Variables "PATH" And "HOME":
	"HOME" shows the whole path to your home directory.
	"PATH" shows all the paths to folders containing executable files.
	
EXERCISE 7:
	The command "#od" stands for octal dump. It shows the contents of the file in octal form by default but it can also show them in, for example, hexadecimal form if using the right flags.
		od -t o1 file.txt
		0000000 150 145 154 154 157 040 167 157 162 154 144 012
		0000014
	In this example, the numbers are the octal representation of the decimal ASCII value of the characters.

	The command "#file" shows the estimated content type of the file.
		file file.txt
		file.txt: ASCII text

	The command "xxd" shows the content of the file in hexadecimal form and also the corresponding characters.
		xxd file.txt
		00000000: 6865 6c6c 6f20 776f 726c 640a            hello world.

	Every one of these commands has a different functions although they all relate to providing information about the content of the file. The command "#file" is the most different from the other two and "#od" is more versatile than "#xxd" as it can also show the content in other forms in an structured form, which is easier to read for the user.
